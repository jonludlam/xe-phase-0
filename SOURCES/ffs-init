#!/bin/bash
#
#  ffs        Startup script for flat file storage service
#
# chkconfig: 2345 13 88
# description: Manages VM disks stored in locally-mounted filesystems.
### BEGIN INIT INFO
# Provides: ffs
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Flat file storage service
# Description:       Manages VM disks stored in locally-mounted filesystems.
### END INIT INFO

# Source function library.
. /lib/lsb/init-functions

RETVAL=0
PIDFILE=/var/run/ffs.pid

prog=ffs
exec=/usr/sbin/ffs
if [ -d /var/lock/subsys ] ; then
    lockfile=/var/lock/subsys/$prog
else
    lockfile=/var/lock/$prog
fi

# Source config
if [ -f /etc/sysconfig/$prog ] ; then
    . /etc/sysconfig/$prog
fi

# Enable core dumps
DAEMON_COREFILE_LIMIT='unlimited'

# Use 'blktap 2.5' if it has been installed
if [ -d /usr/lib64/blktap ]; then
	export XCP_PATH=/usr/lib64/blktap/sbin
	export TAPDISK2=/usr/lib64/blktap/libexec/tapdisk
elif [ -d /usr/lib/blktap ]; then
	export XCP_PATH=/usr/lib/blktap/sbin
	export TAPDISK2=/usr/lib/blktap/libexec/tapdisk
fi
logger -t ffs "XCP_PATH=${XCP_PATH} TAPDISK2=${TAPDISK2}"

start() {
	[ -x $exec ] || exit 5

	umask 077

        echo -n $"Starting ffs: "
	mkdir -p /var/lib/xcp/sm
        start_daemon -p "$PIDFILE" $exec -pidfile "$PIDFILE" -daemon true -socket-path /var/lib/xcp/sm/ffs $FFS_OPTIONS
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && touch $lockfile
        return $RETVAL
}
stop() {
        echo -n $"Shutting down ffs: "
        killproc -p "$PIDFILE" $exec
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f $lockfile
        return $RETVAL
}
rhstatus() {
        status_of_proc -p "$PIDFILE" $exec $prog
}
restart() {
        stop
        start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  reload)
        exit 3
        ;;
  force-reload)
        restart
        ;;
  status)
        rhstatus
        ;;
  condrestart|try-restart)
        rhstatus >/dev/null 2>&1 || exit 0
        restart
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|condrestart|try-restart|reload|force-reload|status}"
        exit 3
esac

exit $?

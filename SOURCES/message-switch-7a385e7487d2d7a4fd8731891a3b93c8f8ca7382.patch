commit 7a385e7487d2d7a4fd8731891a3b93c8f8ca7382
Author: David Scott <dave.scott@citrix.com>
Date:   Fri Jun 12 14:27:16 2015 +0000

    unix: make the client connection thread tail-recursive
    
    We were making non-tailrec calls in the middle of a match, where the
    match case handling was irrelevant anyway. Fix by making the recursive
    call right at the end of the function.
    
    Signed-off-by: David Scott <dave.scott@citrix.com>

diff --git a/unix/protocol_unix.ml b/unix/protocol_unix.ml
index 3feb4fc..4847fc6 100644
--- a/unix/protocol_unix.ml
+++ b/unix/protocol_unix.ml
@@ -266,9 +266,11 @@ module Client = struct
           let frame = In.Transfer transfer in
           Connection.rpc t.events_conn frame
           >>|= fun raw ->
-          let transfer = Out.transfer_of_rpc (Jsonrpc.of_string raw) in
+          (try `Ok (Out.transfer_of_rpc (Jsonrpc.of_string raw))
+           with e -> `Error (`Message_switch `Failed_to_read_response))
+          >>|= fun transfer ->
           match transfer.Out.messages with
-          | [] -> loop from
+          | [] -> `Ok from
           | m :: ms ->
             begin match List.fold_left (fun acc (i, m) -> match acc, i, m with
               | `Error e, _, _ -> `Error e
@@ -289,11 +291,12 @@ module Client = struct
                      | Message.Request _ -> `Ok ()
                    )
               ) (`Ok ()) transfer.Out.messages with
-              | `Ok () -> loop (Some transfer.Out.next)
-              | `Error _ -> loop from (* repeat *)
+              | `Ok () -> `Ok (Some transfer.Out.next)
+              | `Error _ -> `Ok from (* repeat *)
               end
         ) with
-        | `Ok _ -> assert false
+        | `Ok from ->
+          loop from
         | `Error _ ->
           reconnect ()
           >>|= fun (requests_conn, events_conn) ->

Temporary Citrix patch for investigating bug CA-120159

---

diff --git a/stdlib/pervasives.ml b/stdlib/pervasives.ml
index 61fab1e..638eae4 100644
--- a/stdlib/pervasives.ml
+++ b/stdlib/pervasives.ml
@@ -185,7 +185,13 @@ let bool_of_string = function
 let string_of_int n =
   format_int "%d" n
 
-external int_of_string : string -> int = "caml_int_of_string"
+external inria_int_of_string : string -> int = "caml_int_of_string"
+ 
+let int_of_string s =
+  try
+    inria_int_of_string s
+  with Failure "int_of_string" ->
+    raise (Failure ("int_of_string (" ^ s ^ ")"))
 
 module String = struct
   external get : string -> int -> char = "%string_safe_get"
diff --git a/stdlib/pervasives.mli b/stdlib/pervasives.mli
index bab296a..dfa3846 100644
--- a/stdlib/pervasives.mli
+++ b/stdlib/pervasives.mli
@@ -485,14 +485,15 @@ val bool_of_string : string -> bool
 val string_of_int : int -> string
 (** Return the string representation of an integer, in decimal. *)
 
-external int_of_string : string -> int = "caml_int_of_string"
+val int_of_string : string -> int
 (** Convert the given string to an integer.
    The string is read in decimal (by default) or in hexadecimal (if it
    begins with [0x] or [0X]), octal (if it begins with [0o] or [0O]),
    or binary (if it begins with [0b] or [0B]).
-   Raise [Failure "int_of_string"] if the given string is not
+   Raise [Failure "int_of_string (s)"] if the given string s is not
    a valid representation of an integer, or if the integer represented
-   exceeds the range of integers representable in type [int]. *)
+   exceeds the range of integers representable in type [int].
+   (TEMPORARY CHANGE BY CITRIX to include s in exception.) *)
 
 val string_of_float : float -> string
 (** Return the string representation of a floating-point number. *)
